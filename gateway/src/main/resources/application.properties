#nome do microservico
spring.application.name= /gateway
#porta em que ele esta rodanto
server.port=8765

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=true
spring.cloud.discovery.enabled=true
eureka.instance.hostname=localhost


#spring.cloud.gateway.httpclient.ssl.close-notify-flush-timeout=3000
#spring.cloud.gateway.httpclient.response-timeout=3000

#conectar gateway a eureka serve
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#habilitar localizador
spring.cloud.gateway.discovery.locator.enabled=true
#habilitar localizador por id
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

logging.level.root=INFO


#nome aplicado ao microservico
spring.cloud.gateway.routes[0].id=system-controller

#uri liberada para acesso
#lb: serve para balanceamento de carga
#//system-controller nome da aolicação
spring.cloud.gateway.routes[0].uri=lb://system-controller/

#libera todas as rotas depois de lb://system-controller/
spring.cloud.gateway.routes[0].predicates[0]=Path=/**


#nome aplicado ao microservico
spring.cloud.gateway.routes[1].id=system-order-producer

#uri liberada para acesso
#lb: serve para balanceamento de carga
#//system-controller nome da aolicação
spring.cloud.gateway.routes[1].uri=lb://system-order-producer/

#libera todas as rotas depois de lb://system-controller/
spring.cloud.gateway.routes[1].predicates[0]=Path=/**



#nome aplicado ao microservico
spring.cloud.gateway.routes[2].id=system-order-service

#uri liberada para acesso
#lb: serve para balanceamento de carga
#//system-controller nome da aolicação
spring.cloud.gateway.routes[2].uri=lb://system-order-service/

#libera todas as rotas depois de lb://system-controller/
spring.cloud.gateway.routes[2].predicates[0]=Path=/**






